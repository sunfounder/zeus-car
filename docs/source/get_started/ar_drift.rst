.. note:: 

    Bonjour et bienvenue dans la communaut√© des passionn√©s de SunFounder Raspberry Pi, Arduino et ESP32 sur Facebook ! Plongez dans l‚Äôunivers de Raspberry Pi, Arduino et ESP32 avec d‚Äôautres passionn√©s et approfondissez vos connaissances.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : B√©n√©ficiez de l‚Äôaide de notre communaut√© et de notre √©quipe pour r√©soudre les probl√®mes apr√®s-vente et relever les d√©fis techniques.
    - **Apprentissage et partage** : √âchangez des conseils et des tutoriels pour perfectionner vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aux exclusivit√©s.
    - **R√©ductions sp√©ciales** : Profitez d‚Äôoffres exclusives sur nos derni√®res innovations.
    - **Promotions et cadeaux festifs** : Participez √† des concours et √† des offres promotionnelles saisonni√®res.

    üëâ Pr√™t √† explorer et √† cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd‚Äôhui !

4. Drift
======================

Dans ce projet, vous apprendrez √† faire drifter le Zeus Car.

.. image:: img/zeus_drift_left.jpg

**Comment proc√©der ?**

#. La ESP32-CAM et la carte Arduino partagent les m√™mes broches RX (r√©ception) et TX (transmission). Par cons√©quent, lorsque vous t√©l√©versez du code, vous devez d'abord d√©connecter la ESP32-CAM pour √©viter tout conflit ou probl√®me potentiel.

    .. image:: img/unplug_cam.png
        :width: 400
        :align: center


#. Ouvrez le fichier ``4_drift.ino`` sous le chemin ``zeus-car-main\examples\4_drift``.

    .. raw:: html

        <iframe src=https://create.arduino.cc/editor/sunfounder01/9ca66dad-7258-4868-a8a4-3bd512bacd72/preview?embed style="height:510px;width:100%;margin:10px 0" frameborder=0></iframe>

#. Une fois le code t√©l√©vers√© avec succ√®s, mettez l'interrupteur d‚Äôalimentation sur ON pour d√©marrer le Zeus Car.
#. Le Zeus Car avancera pendant 0,5 seconde, puis effectuera un drift de 90 degr√©s vers la gauche, et ainsi de suite. Vous pouvez essayer de modifier la valeur 45 (rot) par une autre valeur ou un nombre n√©gatif pour observer comment l‚Äôangle et la direction du drift changent.


**Comment √ßa fonctionne ?**

Le drift du Zeus Car est r√©alis√© en ajoutant le param√®tre ``drift`` √† la fonction de mouvement ``carMove()``.

.. code-block::

    void carMove(int16_t angle, int8_t power, int8_t rot, bool drift)

* ``angle`` : La direction dans laquelle vous souhaitez d√©placer la voiture. L'avant du v√©hicule est d√©fini comme 0 degr√©, et l'angle augmente dans le sens antihoraire.
* ``power`` : La puissance du d√©placement, comprise entre -100 % et 100 %. Lorsque la valeur est positive, la voiture avance ; lorsqu'elle est n√©gative, elle recule.
* ``rot`` : La puissance de rotation, comprise entre -100 % et 100 %. Lorsque la valeur est positive, la voiture tourne dans le sens antihoraire, et inversement.
* ``drift`` : Par d√©faut false. Lorsqu'il est true, le mode drift est activ√©.

Ainsi, diff√©rentes valeurs de ``power`` et ``rot`` modifieront l'angle et la direction du drift du Zeus Car.
