.. note:: 

    Bonjour et bienvenue dans la communaut√© des passionn√©s de SunFounder Raspberry Pi, Arduino et ESP32 sur Facebook ! Plongez dans l‚Äôunivers de Raspberry Pi, Arduino et ESP32 avec d‚Äôautres passionn√©s et approfondissez vos connaissances.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : B√©n√©ficiez de l‚Äôaide de notre communaut√© et de notre √©quipe pour r√©soudre les probl√®mes apr√®s-vente et relever les d√©fis techniques.
    - **Apprentissage et partage** : √âchangez des conseils et des tutoriels pour perfectionner vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aux exclusivit√©s.
    - **R√©ductions sp√©ciales** : Profitez d‚Äôoffres exclusives sur nos derni√®res innovations.
    - **Promotions et cadeaux festifs** : Participez √† des concours et √† des offres promotionnelles saisonni√®res.

    üëâ Pr√™t √† explorer et √† cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd‚Äôhui !

.. _ar_app_control_plus:

18. Contr√¥le avanc√© via l'APP
==================================

Ce projet int√®gre les fonctions de suivi de ligne, de suivi d‚Äôobjet et d‚Äô√©vitement d‚Äôobstacles bas√©es sur :ref:`ar_app_control`.

.. raw:: html

   <video loop autoplay muted style = "max-width:80%">
      <source src="../_static/video/app_control.mp4"  type="video/mp4">
      Your browser does not support the video tag.
   </video>

.. raw:: html
    
    <br/> <br/>


.. note::
    Veuillez installer `SunFounder Controller <https://docs.sunfounder.com/projects/sf-controller/en/latest/>`_ depuis **l'App Store (iOS)** ou **Google Play (Android)**.


**Comment proc√©der ?**

#. La ESP32-CAM et la carte Arduino partagent les m√™mes broches RX (r√©ception) et TX (transmission). Par cons√©quent, lorsque vous t√©l√©versez du code, vous devez d'abord d√©connecter la ESP32-CAM pour √©viter tout conflit ou probl√®me potentiel.

    .. image:: img/unplug_cam.png
        :width: 400
        :align: center


#. Ouvrez le fichier ``18_app_control_plus.ino`` sous le chemin ``zeus-car-main\examples\18_app_control_plus``.

    .. raw:: html

        <iframe src=https://create.arduino.cc/editor/sunfounder01/b67e7245-369b-4218-b12c-d73f95ac3b22/preview?embed style="height:510px;width:100%;margin:10px 0" frameborder=0></iframe>

#. Une fois le code t√©l√©vers√© avec succ√®s, rebranchez la ESP32-CAM, puis mettez l'interrupteur d‚Äôalimentation sur ON pour d√©marrer le Zeus Car.

    .. image:: img/plug_esp32_cam.jpg
        :width: 300
        :align: center
        
#. Basculez le commutateur de t√©l√©versement sur Run (c√¥t√© droit du sch√©ma) pour lancer la ESP32-CAM. 

    .. image:: img/zeus_run.jpg

#. Appuyez sur le bouton de r√©initialisation pour relancer le programme de la carte Arduino.

    .. image:: img/zeus_reset_button.jpg

#. Connectez-vous au r√©seau WLAN ``Zeus_Car``.

    Connectez maintenant votre appareil mobile au r√©seau local (LAN) diffus√© par le Zeus Car. Ainsi, votre appareil mobile et le Zeus Car seront sur le m√™me r√©seau, facilitant la communication entre l‚Äôapplication et le v√©hicule.


    * Recherchez ``Zeus_Car`` dans les param√®tres Wi-Fi de votre t√©l√©phone ou tablette, entrez le mot de passe ``12345678``, puis connectez-vous.

    
    .. raw:: html

        <div style="text-align: center;">
            <video center loop autoplay muted style = "max-width:80%">
                <source src="../_static/video/connect_wifi.mp4"  type="video/mp4">
                Your browser does not support the video tag.
            </video>
        </div>

    .. raw:: html
        
        <br/>

    * Le mode de connexion par d√©faut est AP mode. Apr√®s la connexion, une notification vous informera qu‚Äôaucun acc√®s Internet n‚Äôest disponible sur ce r√©seau Wi-Fi. S√©lectionnez Continuer la connexion.

    .. image:: img/app_no_internet.png
        :width: 500
        :align: center

    .. raw:: html
        
        <br/>  

#. Cr√©ez un contr√¥leur.

    * Pour ajouter un contr√¥leur dans SunFounder Controller, cliquez sur l‚Äôic√¥ne **+**.

    .. image:: img/app1.png
        :width: 500
        :align: center

    .. raw:: html
        
        <br/>  

    * Certains produits disposent de contr√¥leurs pr√©d√©finis. Ici, s√©lectionnez **Zeus Car**, donnez-lui un nom ou appuyez simplement sur **Confirm**.

    .. image:: img/app_preset.jpg
        :width: 500
        :align: center

    .. raw:: html
        
        <br/>  

    * Une fois √† l‚Äôint√©rieur, l‚Äôapplication recherchera automatiquement le Zeus Car. Apr√®s quelques secondes, un message "Connexion r√©ussie" appara√Ætra.

    .. image:: img/app_edit.jpg
        :width: 500
        :align: center

    .. raw:: html
        
        <br/> 

    * Maintenant, appuyez sur le bouton |app_run| pour afficher le flux vid√©o en direct de la cam√©ra et contr√¥ler le v√©hicule √† l'aide des widgets fournis. 

    .. image:: img/app_run123.png
        :width: 500
        :align: center

    .. raw:: html
        
        <br/>  

#. Fonctionnalit√©s des widgets.

        * :ref:`app_compass_cali` : Active l‚Äô√©talonnage du compas.
        * **Stop(F)** : Arr√™te tous les mouvements du v√©hicule.
        * **Reset Heading(G)** : Une fois la voiture orient√©e manuellement, cliquez sur ce widget pour enregistrer cette direction comme r√©f√©rence. Cela permet d‚Äôorienter rapidement la voiture sans avoir √† la repositionner avec d‚Äôautres commandes.
        * :ref:`app_speech_control` : Active le mode de commande vocale.
        * :ref:`app_drift` : Active la fonction de drift.
        * :ref:`app_move` : Permet de d√©placer la voiture dans toutes les directions.
        
        * :ref:`app_line_track` : Ces deux widgets permettent d‚Äôactiver le mode suivi de ligne.
        
            * **Line no Mag(M)** : Active le suivi de ligne sans √™tre influenc√© par le champ magn√©tique. L‚Äôorientation de la voiture changera continuellement.
            * **Line(N)** : Active le suivi de ligne avec alignement sur un champ magn√©tique, garantissant une orientation constante du v√©hicule.

        * :ref:`app_follow` : Active le mode suivi automatique.
        * :ref:`app_avoid` : Active le mode √©vitement d'obstacles.
        * :ref:`app_rotate_drift` : Permet de contr√¥ler la direction de la t√™te du v√©hicule.

.. _app_compass_cali:

Calibration(E)
--------------------------

Activez l‚Äô√©talonnage du compas en cliquant sur le bouton |app_cali_e|.

Placez le Zeus Car au sol. Une fois l‚Äô√©talonnage activ√©, la voiture commencera √† tourner dans le sens antihoraire et s‚Äôarr√™tera au bout d‚Äôenviron une minute. Si elle tourne pendant plus de deux minutes, cela signifie que le champ magn√©tique est trop complexe √† cet endroit. Essayez de changer de lieu et relancez l‚Äô√©talonnage.

.. _app_drift:

Drift Enable(J) 
---------------------


Cliquez sur le bouton |app_drift_j| pour activer la fonction de drift.

* En faisant glisser le widget |app_rotate_q| dans le sens antihoraire, vous verrez le Zeus Car drifter vers la droite. Lorsque vous rel√¢chez, la voiture s‚Äôarr√™te √† sa position actuelle.

.. image:: img/zeus_drift_left.jpg
    :width: 500
    :align: center

.. raw:: html
    
    <br/>  
 
* De m√™me, si vous faites glisser le widget |app_rotate_q| dans le sens horaire, le Zeus Car driftera vers la gauche et s‚Äôarr√™tera √† sa position actuelle.

.. image:: img/zeus_drift_right.jpg
    :width: 500
    :align: center

.. raw:: html
    
    <br/>  
 
.. _app_move:

Move in All Directions(K)
----------------------------------

.. raw:: html

   <video loop autoplay muted style = "max-width:80%">
      <source src="../_static/video/basic_movement.mp4"  type="video/mp4">
      Your browser does not support the video tag.
   </video>

.. raw:: html
    
    <br/> <br/>  

Le Zeus Car se d√©placera dans la direction correspondante lorsque vous faites glisser le widget |app_move_k|.

.. image:: img/joystick_move.png
    :align: center

.. raw:: html
    
    <br/>  

Le v√©hicule effectue un d√©placement √† chaque fois que vous faites glisser le widget. Si vous maintenez votre doigt appuy√©, la voiture continuera √† se d√©placer.

.. image:: img/zeus_move.jpg
    :width: 500
    :align: center


.. raw:: html
    
    <br/>  
 
.. _app_speech_control:

Speech(I)
-------------------

En appuyant sur le widget |app_speech_m|, vous activez la fonction STT (Speech to Text).

L‚Äôapplication SunFounder Controller s‚Äôint√®gre au moteur de reconnaissance vocale de votre appareil mobile. Ainsi, lorsque vous appuyez et maintenez le widget **Speech(I)** sur SunFounder Controller et que vous parlez dans votre appareil, celui-ci capture votre voix, la convertit en texte et l‚Äôenvoie au Zeus Car. Si ce texte correspond aux commandes pr√©-enregistr√©es dans votre code, la voiture ex√©cutera les actions correspondantes.

Voici les commandes actuellement pr√©-enregistr√©es dans le code. Prononcez l‚Äôune d‚Äôelles et observez la r√©action du Zeus Car.

* ``stop`` : Arr√™te tous les mouvements du v√©hicule.
* ``pasue`` : Fonction similaire √† Stop, mais si la t√™te du v√©hicule ne fait pas face √† la direction initialement d√©finie, elle s‚Äôajustera lentement.
* ``forward``
* ``backward``
* ``left forward``
* ``left backward``
* ``right forward``
* ``right backward``
* ``move left``
* ``move right``

.. note::

    La fonction STT (Speech to Text) n√©cessite une connexion Internet et les services Google sur les appareils Android. Cependant, elle ne fonctionne pas avec le mode AP (Access Point) pr√©configur√© sur le Zeus Car.

    En mode AP, le Zeus Car cr√©e un r√©seau Wi-Fi local auquel votre appareil mobile peut se connecter, mais qui ne fournit pas d‚Äôacc√®s Internet.

    Pour utiliser la fonction STT sur Android, passez du mode AP au mode STA, comme expliqu√© dans :ref:`stt_android`.

.. note::

    Les appareils iOS, utilisant un moteur de reconnaissance vocale hors ligne, fonctionnent aussi bien en mode AP qu‚Äôen mode STA.

Une fois que la voiture re√ßoit l‚Äôune des huit commandes ci-dessus, elle continuera √† se d√©placer dans la direction correspondante jusqu‚Äô√† ce qu‚Äôelle re√ßoive une commande ``stop`` ou ``pasue``.

.. image:: img/zeus_move.jpg
    :width: 500
    :align: center

* ``turn left`` : Cette commande fera tourner la voiture de 45¬∞ vers la gauche autour de son axe central, puis elle avancera ou s‚Äôarr√™tera en fonction de son √©tat pr√©c√©dent. Si elle √©tait arr√™t√©e, elle s‚Äôarr√™tera apr√®s avoir tourn√© de 45¬∞ ; si elle avan√ßait, elle poursuivra son mouvement apr√®s la rotation.

.. image:: img/zeus_turn_left.jpg
    :width: 500
    :align: center

.. raw:: html
    
    <br/>  
 
* ``turn right`` : Cette commande fera tourner la voiture de 45¬∞ vers la droite autour de son axe central, puis elle avancera ou s‚Äôarr√™tera en fonction de son √©tat pr√©c√©dent.

.. image:: img/zeus_turn_right.jpg
    :width: 500
    :align: center

.. raw:: html
    
    <br/>  
 
.. _app_line_track:

Line Track
--------------

.. raw:: html

   <video loop autoplay muted style = "max-width:80%">
      <source src="../_static/video/drift_based_line_following.mp4"  type="video/mp4">
      Your browser does not support the video tag.
   </video>

.. raw:: html
    
    <br/> <br/>  


Cliquez sur le widget |app_line_n| pour activer le mode suivi de ligne.

Deux modes de suivi de ligne sont disponibles sur le Zeus Car, l‚Äôun avec la t√™te toujours orient√©e dans la direction du d√©placement et l‚Äôautre avec la t√™te dirig√©e vers une direction fixe. Ici, le second mode est s√©lectionn√©.


#. Collez une ligne de 3 cm de large

    Il y a huit capteurs sur le module Omni Grayscale, et la distance entre chaque capteur est comprise entre 2 et 3 cm. Au moins deux capteurs doivent d√©tecter simultan√©ment la ligne noire. Par cons√©quent, la ligne que vous collez doit avoir une largeur d‚Äôau moins 3 cm et un angle de courbure sup√©rieur √† 90¬∞.

    .. image:: img/map.png
        :width: 500
        :align: center

    .. raw:: html
        
        <br/>  
 
#. Calibrez le module Omni Grayscale.

    Chaque surface de sol ayant des valeurs de gris diff√©rentes, le seuil de gris d√©fini en usine peut ne pas √™tre adapt√© √† votre environnement actuel. Il est donc n√©cessaire de calibrer ce module avant utilisation. Il est recommand√© d‚Äôeffectuer une calibration chaque fois que la couleur du sol change consid√©rablement.

    * Placez le Zeus Car sur une surface blanche et tournez le potentiom√®tre jusqu‚Äô√† ce que le voyant du capteur de gris s‚Äôallume.

    .. image:: img/zeus_line_calibration.jpg
        :width: 500
        :align: center
    

    .. raw:: html
        
        <br/>  
 
    * Placez ensuite les deux capteurs de gris lat√©raux juste entre la ligne noire et la surface blanche, et tournez lentement le potentiom√®tre jusqu‚Äô√† ce que le voyant de signal s‚Äô√©teigne.

    .. image:: img/zeus_line_calibration1.jpg
        :width: 500
        :align: center

    .. raw:: html
        
        <br/>  
 
    * D√©placez le v√©hicule plusieurs fois sur la ligne noire et la surface blanche pour v√©rifier que les capteurs s‚Äôallument lorsqu‚Äôils sont sur la surface blanche et s‚Äô√©teignent lorsqu‚Äôils sont entre la ligne noire et la surface blanche. Cela indique que le module est correctement calibr√©.


#. Placez le Zeus Car sur la ligne coll√©e, cliquez sur le widget |app_line_n|, et il suivra la ligne.

#. En raison des exigences environnementales √©lev√©es du module Omni Grayscale, il est recommand√© de calibrer plusieurs fois le capteur si le suivi n‚Äôest pas pr√©cis.

.. _app_follow:

Follow(O) 
------------

.. raw:: html

   <video loop autoplay muted style = "max-width:80%">
      <source src="../_static/video/object_following.mp4"  type="video/mp4">
      Your browser does not support the video tag.
   </video>

.. raw:: html
    
    <br/> <br/>  

Cliquez sur le widget |app_follow_o| pour activer le mode suivi.

Le capteur √† ultrasons d√©tecte les obstacles situ√©s √† 20 cm devant le v√©hicule et les suit en avan√ßant. Ces deux modules d‚Äô√©vitement d‚Äôobstacles permettent au Zeus Car de suivre un objet vers la gauche ou vers la droite, mais ils doivent √™tre calibr√©s √† 15 cm avant utilisation.

#. Calibrer le module d‚Äô√©vitement d‚Äôobstacles infrarouge.

    * Commencez par ajuster le module de d√©tection des obstacles droit. Lors du transport, des chocs peuvent incliner l‚Äô√©metteur et le r√©cepteur du module infrarouge. Vous devez donc les redresser manuellement.

        .. raw:: html

            <video loop autoplay muted style = "max-width:80%">
                <source src="../_static/video/toggle_avoid.mp4"  type="video/mp4">
                Your browser does not support the video tag.
            </video>

        .. raw:: html
            
            <br/> <br/>  

    * Placez un obstacle √† environ 15 cm du module d‚Äô√©vitement infrarouge.
    * Sur le module, il y a deux potentiom√®tres : l‚Äôun pour ajuster la puissance d‚Äô√©mission et l‚Äôautre pour r√©gler la fr√©quence d‚Äô√©mission. En ajustant ces deux potentiom√®tres, vous pouvez modifier la distance de d√©tection.
    * Ajustez un potentiom√®tre et si, √† 15 cm, le voyant du module s‚Äôallume, l‚Äôajustement est r√©ussi ; sinon, ajustez l‚Äôautre potentiom√®tre.

    .. image:: img/zeus_ir_avoid.jpg
        :width: 400
        :align: center

    .. raw:: html
        
        <br/>  
    
    * Calibrez l‚Äôautre module d‚Äô√©vitement d‚Äôobstacles de la m√™me mani√®re.

#. Placez le Zeus Car sur une table ou au sol et laissez-le suivre votre main ou d‚Äôautres objets.

.. _app_avoid:

Avoid(P)
------------------------

.. raw:: html

   <video loop autoplay muted style = "max-width:80%">
      <source src="../_static/video/obstacle_avoidance.mp4"  type="video/mp4">
      Your browser does not support the video tag.
   </video>

.. raw:: html
    
    <br/> <br/>  

Lorsque vous souhaitez activer le mode d‚Äô√©vitement d‚Äôobstacles, cliquez sur le widget |app_avoid_p|, mais r√©f√©rez-vous d‚Äôabord √† :ref:`app_follow` pour calibrer les deux modules d‚Äô√©vitement d‚Äôobstacles.

* Le Zeus Car avance en ligne droite.
* Un module √† ultrasons d√©tecte les obstacles √† l‚Äôavant. Si un obstacle est d√©tect√©, la voiture tourne √† gauche.
* Lorsque le module d‚Äô√©vitement gauche d√©tecte un obstacle, la voiture tourne √† droite. Lorsque le module d‚Äô√©vitement droit d√©tecte un obstacle, la voiture tourne √† gauche.

.. _app_rotate_drift:

Control the Direction(Q)
-------------------------------

* Lorsque le bouton |app_drift_j| est activ√©, le widget |app_rotate_q| est utilis√© pour faire drifter le Zeus Car vers la gauche et la droite.

* Lorsque le widget |app_drift_j| est d√©sactiv√©, le widget |app_rotate_q| est utilis√© pour contr√¥ler l‚Äôorientation de la t√™te du v√©hicule.

    * En faisant glisser le widget |app_rotate_q| dans le sens antihoraire, la voiture tournera √©galement dans le sens antihoraire. En rel√¢chant le widget, la t√™te du v√©hicule reviendra √† sa direction initiale.

    .. image:: img/zeus_turn_left.jpg
        :width: 500
        :align: center

    .. raw:: html
        
        <br/>  
    
    * De la m√™me mani√®re, en faisant glisser le widget |app_rotate_q| dans le sens horaire, la voiture tournera dans le sens horaire et reviendra √† sa direction initiale lorsqu‚Äôelle sera rel√¢ch√©e.

    .. image:: img/zeus_turn_right.jpg
        :width: 500
        :align: center

    .. raw:: html
        
        <br/>  