.. note::

    こんにちは、SunFounderのRaspberry Pi & Arduino & ESP32愛好家コミュニティへようこそ！Facebook上でRaspberry Pi、Arduino、ESP32についてもっと深く掘り下げ、他の愛好家と交流しましょう。

    **参加する理由は？**

    - **エキスパートサポート**：コミュニティやチームの助けを借りて、販売後の問題や技術的な課題を解決します。
    - **学び＆共有**：ヒントやチュートリアルを交換してスキルを向上させましょう。
    - **独占的なプレビュー**：新製品の発表や先行プレビューに早期アクセスしましょう。
    - **特別割引**：最新製品の独占割引をお楽しみください。
    - **祭りのプロモーションとギフト**：ギフトや祝日のプロモーションに参加しましょう。

    👉 私たちと一緒に探索し、創造する準備はできていますか？[|link_sf_facebook|]をクリックして今すぐ参加しましょう！

FAQ
================
Wi-Fiチャンネルを変更する方法
----------------------------------

2.4GHz Wi-Fi帯域には、1から13までのチャンネルがあります。ESP32は1から11までのチャンネルをサポートしています。同じチャンネルで動作する他のデバイスが干渉を引き起こす場合があり、それが接続の問題につながる可能性があります。この問題を軽減するために、チャンネルを変更してみてください。デフォルトでは、チャンネルは1に設定されています。新しいチャンネルを選択する際には、1～2チャンネル飛ばして設定することを推奨します。例えば、現在のチャンネルが1の場合、まずチャンネル3を試し、それでも信号が悪い場合はチャンネル5に進みます。

.. note::

   Wi-Fiチャンネルを変更するには、ESP32 CAMファームウェアバージョン1.4.1以上が必要です。詳細は :ref:`update_firmware` を参照してください。

#. ESP32 CAMをアダプターに挿入したままにして、Zeus Carの電源をオンにします。

   .. image:: img/plug_esp32_cam.jpg
      :width: 400

#. ESP32 CAMを有効にするには、モードスイッチを **Run** 位置に移動し、 **Reset** ボタンを押してR3ボードを再起動します。

   .. image:: img/zeus_run123.jpg
      :width: 600

#. モバイルデバイス（タブレットやスマートフォン）で使用可能なネットワークリストから ``Zeus Car`` を見つけ、パスワード ``12345678`` を入力して接続します。

   .. note::

        * 現在の接続はZeus Carホットスポットに接続しており、インターネットアクセスはありません。ネットワークを切り替えるように促された場合は、「接続を維持」を選択してください。

   .. image:: img/app_wlan.png
        :width: 500

#. モバイルデバイスのウェブブラウザを開き、 ``http://192.168.4.1`` にアクセスしてESP32 CAM OTA更新ページに移動します。

   .. image:: img/faq_cam_ota_141.jpg
      :width: 400

#. **Wi-Fi AP Channel** セクションで、異なるチャンネルを選択します。

   * デフォルトのチャンネルは1です。新しいチャンネルを選択する際には、1～2チャンネル飛ばして設定してください（例：チャンネル1から3へ、さらに必要なら5へ）。  
   * **Confirm** ボタンをクリックして変更を保存します。

   .. image:: img/faq_cam_ota_channel.png
      :width: 400

#. 確認ポップアップが表示され、デバイスをリセットするように促されます。 **Confirm** をクリックします。

   .. image:: img/faq_cam_ota_reset.jpg
      :width: 400
   
#. **Reset** ボタンを押してデバイスを再起動します。Zeus Carの通常操作が可能になります。

   .. image:: img/zeus_run123.jpg
      :width: 600

.. _update_firmware:

ESP32 CAMのファームウェアを更新する方法
-----------------------------------------

ESP32 CAMのファームウェアを更新するには、以下の詳細な手順に従ってください：

#. ESP32 CAMをアダプターに挿入したままにして、Zeus Carの電源をオンにします。

   .. image:: img/plug_esp32_cam.jpg
      :width: 400

#. ESP32 CAMを有効にするには、モードスイッチを **Run** 位置に移動し、 **Reset** ボタンを押してR3ボードを再起動します。

   .. image:: img/zeus_run123.jpg
      :width: 600

#. モバイルデバイス（タブレットやスマートフォン）で使用可能なネットワークリストから ``Zeus Car`` を見つけ、パスワード ``12345678`` を入力して接続します。

   .. note::

      * 現在の接続はZeus Carホットスポットに接続しており、インターネットアクセスはありません。ネットワークを切り替えるように促された場合は、「接続を維持」を選択してください。

   .. image:: img/app_wlan.png
        :width: 500

#. 以下のリンクをクリックしてファームウェアファイル ``ai-camera-firmware-v1.4.1-ota.bin`` をダウンロードし、モバイルデバイスに保存します。

   * :download:`ESP32 CAM Firmware <https://github.com/sunfounder/ai-camera-firmware/releases/download/1.4.1/ai-camera-firmware-v1.4.1-ota.bin>`

#. モバイルデバイスのウェブブラウザを開き、 ``http://192.168.4.1`` にアクセスしてESP32 CAM OTA更新ページに移動します。

   .. image:: img/faq_cam_ota.jpg
      :width: 400

#. OTAページで、ファームウェアファイルを選択するボタンをクリックします。

   .. image:: img/faq_cam_ota_choose.png
      :width: 400

#. 先ほどダウンロードした ``ai-camera-firmware-v1.4.1-ota.bin`` ファイルをデバイスから選択し、 **OK** をクリックします。

   .. image:: img/faq_cam_ota_file.png
      :width: 400

#. **Update** ボタンをクリックしてファームウェア更新プロセスを開始します。

   .. image:: img/faq_cam_ota_update.png
      :width: 400
   
#. 更新が完了するまで待ちます。表示されるバージョン番号が ``1.4.1`` に変更されたら、更新成功です。

   .. image:: img/faq_cam_ota_finish.png
      :width: 400
   
#. 更新が完了したら、ウェブブラウザを閉じます。 **Reset** ボタンを押してデバイスを再起動します。ESP32 CAMの通常操作が可能になります。

   .. image:: img/zeus_run123.jpg
      :width: 600

.. _upload_zeus_code:

``zeus-car.ino`` コードをアップロードする方法
-----------------------------------------------

デフォルトでは、Zeus CarのUno R3ボードには必要なファームウェアがプリロードされており、APPを介して操作できます。他のコードがR3ボードに書き込まれている場合でも、デフォルトのファームウェアに戻し、:ref:`quick_start` プロセスを続行するには、以下の手順に従ってコードを再アップロードしてください：

#. USBケーブルを使用してArduinoをコンピュータに接続します。ESP32-CAMとArduinoボードは同じRX（受信）およびTX（送信）ピンを共有しています。そのため、コードをアップロードする際には、ESP32-CAMを最初に取り外して、競合や潜在的な問題を回避する必要があります。
   
   .. image:: img/unplug_cam.png
        :width: 400

#. 以下のリンクから必要なファームウェアをダウンロードします：
        
   * :download:`R3 Board Firmware File <https://github.com/sunfounder/zeus-car/releases/download/1.4.5/zeus-car-1.4.5.zip>`

#. ダウンロードしたzipファイルを解凍し、 ``update-arduino-firmware.bat`` ファイルをダブルクリックして実行します。

   .. image:: img/faq_firmware_file.png

#. Zeus CarのArduino Uno用に該当する番号（例： ``1`` ）を入力し、 **Enter** を押して更新を開始します。

   .. note::

     * 正しいCOMポートが表示されない場合、またはどれが正しいか不明な場合は、他のUSBデバイスをコンピュータから取り外し、ローバーのみを接続してください。  
     * ``avrdude.exe: stk500_getsync() attempt 1 of 10: not in sync: resp=0xXX`` のようなエラーが発生した場合は、最初の手順としてESP32-CAMを取り外してください。

   .. image:: img/faq_firmware_port.png

#. しばらくすると、新しいコードがZeus CarのUno R3ボードに正常にアップロードされます。複数回試行しても成功しない場合は、 ``update-arduino-firmware-with-bootloader.bat`` を実行してください。

   .. image:: img/faq_firmware_finish.png

.. _ap_to_sta:

ホームWiFiを使用してZeus Carを制御する方法
-------------------------------------------------
デフォルトでは、Uno R3にはAPPモードに設定されたコードがプリロードされています。このモードでは、Zeus Carがホットスポットを放送し、モバイルデバイスを接続してSunFounder Controller APPを介して制御できます。

ホームWiFiを使用してローバーを制御したい場合は、以下の手順に従って修正済みのコードをUnoボードにアップロードしてください：

#. 以下のリンクから必要なファイルをダウンロードします：  

   * :download:`Zeus Car Codes <https://github.com/sunfounder/zeus-car/archive/refs/heads/main.zip>`

#. インストールガイドを参照してください： :ref:`install_arduino_ide`.

#. **ライブラリマネージャー** を使用して、 ``SoftPWM`` および ``SunFounder AI Camera`` ライブラリをインストールします。詳細な手順は :ref:`ar_install_lib` を参照してください。

#. ``zeus-car-main\zeus-car`` ディレクトリに移動し、 ``zeus-car.ino`` ファイルを開きます。

   .. image:: img/faq_galaxy_code.png
      :width: 600

#. APモードの行をコメントアウトし、STAモードの行をアンコメントして、 ``SSID`` と ``PASSWORD`` をホームWiFiの認証情報に置き換えます。

   .. code-block:: arduino

      /** WiFiモード、SSID、パスワードを設定 */
      // #define WIFI_MODE WIFI_MODE_AP
      // #define SSID "Zeus_Car"
      // #define PASSWORD "12345678"

      #define WIFI_MODE WIFI_MODE_STA
      #define SSID "xxxxxxxxxx"
      #define PASSWORD "xxxxxxxxxx"

#. USBケーブルを使用してArduinoをコンピュータに接続します。ESP32-CAMとArduinoボードは同じRX（受信）およびTX（送信）ピンを共有しているため、コードをアップロードする際には、競合や問題を回避するために最初にESP32-CAMを取り外す必要があります。

   .. image:: img/unplug_cam.png
        :width: 400

#. Arduino IDEの **Upload** ボタンをクリックして、修正済みのコードをUnoボードにアップロードします。

   .. image:: img/faq_galaxy_upload.png
      :width: 600

#. コードのアップロードが正常に完了したら、ESP32-CAMを挿入してから電源スイッチをONにスライドし、Zeus Carを起動します。

    .. image:: img/plug_esp32_cam.jpg

#. ESP32 CAMを有効にするには、モードスイッチを **Run** 位置に移動し、 **Reset** ボタンを押してR3ボードを再起動します。

   .. image:: img/zeus_run123.jpg
      :width: 600

#. モバイルデバイス（タブレットやスマートフォン）がホームWiFiネットワークに接続されていることを確認します。

   .. image:: img/faq_connect_wifi.jpg
        :width: 400
        :align: center

#. SunFounder Controller Appを開き、"+"アイコンをタップして新しいコントローラーを作成します。「Zeus Car」のプリセットを選択し、名前を入力するか、「Confirm」をタップして進みます。

   .. image:: img/app_preset.jpg
        :width: 600

#. アプリが自動的にZeus Carを検索します。しばらくすると、 「Connected Successfully」 というプロンプトが表示されます。

   .. image:: img/app_edit.jpg
        :width: 600
    
#. 次に、|app_run| ボタンをタップすると、カメラのライブ映像を視聴し、提供されたウィジェットを使用してローバーを制御できるようになります。

   .. image:: img/app_run123.png
        :width: 600 
    
カメラを反転する方法  
---------------------------

SunFounder Controllerを使用しているときにカメラ映像が上下逆さまになっている場合、アプリ内で簡単に修正できます。以下の手順に従ってください：  

1. 右上の |app_edit| ボタンをタップします。  

   .. image:: img/faq_edit.png  
        :width: 500 

2. **camera** ボタンをクリックしてポップアップを開きます。 **Inverted** スイッチをオンに切り替えます。  

   .. image:: img/faq_inverted.png  
        :width: 500  

3. 設定を保存します。  

   .. image:: img/faq_save.png  
        :width: 500 

4. コントロール画面に戻り、|app_run| ボタンをクリックします。  

   .. note::  

        時々、カメラ映像が表示されない場合があります。その場合は、コントローラーを一時停止してから再度再生ボタンをクリックしてください。  

   .. image:: img/faq_run.png  
        :width: 500  


コンパイルエラー: SoftPWM.h: ファイルまたはディレクトリが見つかりません？
--------------------------------------------------------------------------------------------

「Compilation error: SoftPWM.h: No such file or directory」というプロンプトが表示された場合、それは ``SoftPWM`` ライブラリがインストールされていないことを意味します。

必要なライブラリのインストールについては、:ref:`ar_install_lib` を参照してください。

avrdude: stk500_getsync() 試行10回中10回: 同期せず: resp=0x6e？
-------------------------------------------------------------------------------------

ボードとポートが正しく選択された後、アップロードボタンをクリックすると以下のメッセージが表示され続ける場合。

.. code-block::

    avrdude: stk500_recv(): プログラマが応答していません
    avrdude: stk500_getsync() 試行1回中10回: 同期せず: resp=0x00
    avrdude: stk500_recv(): プログラマが応答していません
    avrdude: stk500_getsync() 試行2回中10回: 同期せず: resp=0x00
    avrdude: stk500_recv(): プログラマが応答していません
    avrdude: stk500_getsync() 試行3回中10回: 同期せず: resp=0x00

この時点で、ESP32 CAMが抜かれていることを確認する必要があります。

ESP32-CAMとArduinoボードは、同じRX（受信）およびTX（送信）ピンを共有しています。したがって、コードをアップロードする際には、競合や潜在的な問題を避けるためにまずESP32-CAMを切断する必要があります。

.. image:: img/unplug_cam.png
    :width: 400
    :align: center

.. _stt_android:

AndroidデバイスでSTT機能を使用する方法は？
------------------------------------------------------------------------

STT機能を使用するためには、Androidモーバイルデバイスがインターネットに接続されており、 **Googleサービスコンポーネント** がインストールされている必要があります。

以下の手順に従ってください。

#. ``Zeus_Car.ino`` ファイルのAPモードをSTAモードに変更してください。

    * ``zeus-car-main/Zeus_Car`` ディレクトリにある ``Zeus_Car.ino`` ファイルを開きます。
    * APモード関連のコードをコメントアウトし、STAモード関連のコードのコメントを解除し、自宅のWi-Fiの ``SSID`` と ``PASSWORD`` を入力します。

        .. code-block:: arduino

            /** Wifiモード、SSID、パスワードを設定 */
            // #define WIFI_MODE WIFI_MODE_AP
            // #define SSID "Zeus_Car"
            // #define PASSWORD "12345678"

            #define WIFI_MODE WIFI_MODE_STA
            #define SSID "xxxxxxxxxx"
            #define PASSWORD "xxxxxxxxxx"

    * このコードを保存し、正しいボード(Arduino Uno)とポートを選択して、 **Upload** ボタンをクリックしてR3ボードにアップロードしてください。

#. Google Playで ``google`` を検索し、以下に示すアプリを見つけてインストールします。

    .. image:: img/google_voice.png

#. コードに書かれているものと同じWi-Fiにモバイルデバイスを接続します。

    .. image:: img/sta_wifi.png
        :width: 400
        :align: center

#. 以前にSunFounder Controllerで作成したコントローラを開き、 |app_connect| ボタンを使って ``Zeus_Car`` に接続します。

    .. image:: img/app_connect.png
        :width: 500
        :align: center

#. |app_run| ボタンをクリックした後、 |app_speech_m| ウィジェットをタップ&ホールドします。聞き取り中であることを示すプロンプトが表示されます。車を動かすための次のコマンドを話します。

    * ``stop``: 車の動きをすべて停止できます。
    * ``pasue``: この機能はStopと基本的に同じですが、車の頭部が元々設定された方向を向いていない場合、設定された方向にゆっくりと動きます。
    * ``forward``
    * ``backward``
    * ``left forward``
    * ``left backward``
    * ``right forward``
    * ``right backward``
    * ``move left``
    * ``move right``